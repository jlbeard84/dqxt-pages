{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/index.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/menu-translation/menu-translation.page.ts","../../src/core/enums/enums.ts","../../src/core/models/menu-translation.model.ts","../../src/core/models/translation-grouping.model.ts","../../src/core/services/http-base-url.service.ts","../../src/core/services/menu-translation.service.ts","../../src/core/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","export { MenuTranslationPage } from \"./menu-translation/menu-translation.page\"\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport \"rxjs/add/operator/map\";\r\n\r\nimport { MyApp } from './app.component';\r\n\r\nimport { HttpBaseUrlService, MenuTranslationService } from \"../core\";\r\n\r\nimport * as Pages from \"../pages\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    Pages.MenuTranslationPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    Pages.MenuTranslationPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    HttpBaseUrlService,\r\n    MenuTranslationService,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport * as Pages from '../pages';\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = Pages.MenuTranslationPage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { MenuTranslation, MenuTranslationService, MenuType, TranslationGrouping } from \"../../core\";\r\n\r\n@Component({\r\n  selector: 'dqxt-menu-translation-page',\r\n  templateUrl: 'menu-translation.page.html'\r\n})\r\nexport class MenuTranslationPage {\r\n\r\n  private mainMenu: TranslationGrouping;\r\n  private isLoading: boolean = true;\r\n\r\n  constructor(\r\n    private navController: NavController,\r\n    private navParams: NavParams,\r\n    private menuTranslationService: MenuTranslationService) {\r\n\r\n    if (this.navParams && this.navParams.data && this.navParams.data.translationGrouping) {\r\n      this.mainMenu = this.navParams.data.translationGrouping;\r\n      this.isLoading = false;\r\n    } else {\r\n      this.buildMainMenu();\r\n    }\r\n  }\r\n\r\n  private buildMainMenu(): void {\r\n\r\n    this.menuTranslationService\r\n    .getMenu(MenuType.MainMenu)\r\n    .subscribe((menu: TranslationGrouping) => {\r\n      this.mainMenu = menu;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  protected openMenu(translation: MenuTranslation): void {\r\n  \r\n    if (translation.subMenus && translation.subMenus.groupings && translation.subMenus.groupings.length > 0) {\r\n      this.navController.push(\r\n        MenuTranslationPage,\r\n        { translationGrouping: translation.subMenus }\r\n      );\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/menu-translation/menu-translation.page.ts","export enum MenuType {\r\n    MainMenu = 1\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/core/enums/enums.ts","import { TranslationGrouping } from \"./translation-grouping.model\";\r\n\r\nexport class MenuTranslation {\r\n    public originalText: string;\r\n    public translatedText: string;\r\n    public subMenus: TranslationGrouping;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/models/menu-translation.model.ts","import { MenuTranslation } from \"./menu-translation.model\";\r\n\r\nexport class TranslationGrouping {\r\n\r\n    public groupings: Array<Array<MenuTranslation>> = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/models/translation-grouping.model.ts","import { Injectable } from \"@angular/core\"\r\n\r\n@Injectable()\r\nexport class HttpBaseUrlService {\r\n\r\n    constructor() {   \r\n    }\r\n\r\n    public getServiceBase(): string {\r\n        //TODO: put this into environment file\r\n        return \"https://dqxt-api.herokuapp.com/api/\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/services/http-base-url.service.ts","import { Injectable } from \"@angular/core\"\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\nimport { \r\n    HttpBaseUrlService,\r\n    MenuType, \r\n    TranslationGrouping \r\n} from \"../\";\r\n\r\nconst apiRouteBase: string = \"menu/\";\r\nconst mainMenuSuffix: string = \"main-menu\";\r\n\r\n@Injectable()\r\nexport class MenuTranslationService {\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private httpBaseUrlService: HttpBaseUrlService) {   \r\n    }\r\n\r\n    public getMenu(menuType: MenuType) : Observable<TranslationGrouping> {\r\n        \r\n        let url = `${this.httpBaseUrlService.getServiceBase()}${apiRouteBase}`;\r\n\r\n        if(menuType == MenuType.MainMenu) {\r\n            url += mainMenuSuffix;\r\n        }\r\n        \r\n        return this\r\n            .http\r\n            .get(url)\r\n            .map((response: Response) => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/services/menu-translation.service.ts","//Enums\r\nexport { MenuType } from \"./enums/enums\";\r\n\r\n//Models\r\nexport { MenuTranslation } from \"./models/menu-translation.model\";\r\nexport { TranslationGrouping } from \"./models/translation-grouping.model\";\r\n\r\n//Services\r\nexport { HttpBaseUrlService } from \"./services/http-base-url.service\";\r\nexport { MenuTranslationService } from \"./services/menu-translation.service\";\n\n\n// WEBPACK FOOTER //\n// ./src/core/index.ts"],"sourceRoot":""}